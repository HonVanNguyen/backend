name: production

on:
  push:
    branches:
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t Pro-be .

    # Save Docker image as a tar file
    - name: Save Docker Image
      run: |
        docker save Pro-be > Pro-be.tar

    # Transfer Docker image to VPS
    - name: Transfer Docker Image to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.PROD_LIGHTSAIL_IP }}
        username: ${{ secrets.PROD_LIGHTSAIL_USER }}
        key: ${{ secrets.PROD_LIGHTSAIL_KEY }}
        source: Pro-be.tar
        target: ~/Pro/Pro-be

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # SSH into VPS and Deploy
    - name: SSH into VPS and Deploy
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.PROD_LIGHTSAIL_IP }}
        username: ${{ secrets.PROD_LIGHTSAIL_USER }}
        key: ${{ secrets.PROD_LIGHTSAIL_KEY }}
        script: |
          # Load the Docker image
          docker load < ~/Pro/Pro-be/Pro-be.tar

          # Check if the network exists
          docker network inspect Pro &> /dev/null || docker network create Pro

          # Check if the container exists
          docker inspect Pro-be &> /dev/null || true

          # Remove any existing container
          docker stop Pro-be || true
          docker rm Pro-be || true

          # Copy .env
          cp ~/Pro/env_configs/.env ~/Pro/Pro-be/.env

          # Run the container with the .env file
          docker run -p 5002:5002 \
            --env-file ~/Pro/Pro-be/.env \
            --name Pro-be \
            --restart always \
            --network Pro \
            -v /my/data/dir:/var/lib/Pro \
            -d Pro-be